// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NiN3KodeAPI.DbContexts;

#nullable disable

namespace NiN3KodeAPI.Migrations
{
    [DbContext(typeof(NiN3DbContext))]
    partial class NiN3DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NiN3KodeAPI.Entities.Domene", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("domene");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65e16959-3031-4e19-b692-f2f875bbf4e5"),
                            Navn = "3.0"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Grunntype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HovedtypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProsedyrekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HovedtypeId");

                    b.HasIndex("ProsedyrekategoriId");

                    b.HasIndex("VersionId");

                    b.ToTable("Grunntype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HovedtypegruppeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProsedyrekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HovedtypegruppeId");

                    b.HasIndex("ProsedyrekategoriId");

                    b.HasIndex("VersionId");

                    b.ToTable("Hovedtype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtypegruppe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Typekategori2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Typekategori2Id");

                    b.HasIndex("VersionId");

                    b.ToTable("Hovedtypegruppe");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Ecosystnivaa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ecosystnivå");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abe83bd4-b9e1-4561-ba88-198baceb6188"),
                            Beskrivelse = "abiotisk",
                            Kode = "A"
                        },
                        new
                        {
                            Id = new Guid("7d211287-77b6-4e23-9ac1-85f12d939dd6"),
                            Beskrivelse = "biotisk",
                            Kode = "B"
                        },
                        new
                        {
                            Id = new Guid("05b1c2d5-5c6d-4919-bdaa-0aed6b7c523d"),
                            Beskrivelse = "økodiversitet",
                            Kode = "C"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Maalestokk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maalestokk");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5697e50b-9e7b-4601-855d-e29ddd262522"),
                            Beskrivelse = "grunntype",
                            Kode = "G"
                        },
                        new
                        {
                            Id = new Guid("cbfc9cde-b07d-4922-8337-8a3f5d085185"),
                            Beskrivelse = "kartleggingsenhet tilpasset 1:5000",
                            Kode = "005K"
                        },
                        new
                        {
                            Id = new Guid("4da882f9-692a-4e0c-81e0-9ebe244436e8"),
                            Beskrivelse = "kartleggingsenhet tilpasset 1:10 000",
                            Kode = "010K"
                        },
                        new
                        {
                            Id = new Guid("e64afe5c-7c1e-4e60-9285-c7d9e163a942"),
                            Beskrivelse = "kartleggingsenhet tilpasset 1:20 000",
                            Kode = "020K"
                        },
                        new
                        {
                            Id = new Guid("936ae6f6-e2eb-49df-9181-a1b01255ac2f"),
                            Beskrivelse = "kartleggingsenhet tilpasset 1:50 000",
                            Kode = "050K"
                        },
                        new
                        {
                            Id = new Guid("524ee6b6-47a8-4bc4-89e5-8fd82f9293cf"),
                            Beskrivelse = "kartleggingsenhet tilpasset 1:100 000",
                            Kode = "100K"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prosedyrekategori");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f787d8d-248e-48cd-8ad8-aaa224e716b9"),
                            Beskrivelse = "A",
                            Kode = "A"
                        },
                        new
                        {
                            Id = new Guid("1fb7a0bc-01a7-453f-a337-e45398f5300e"),
                            Beskrivelse = "B",
                            Kode = "B"
                        },
                        new
                        {
                            Id = new Guid("6ac6ebcb-6226-4497-a045-9561a52a7ef0"),
                            Beskrivelse = "C",
                            Kode = "C"
                        },
                        new
                        {
                            Id = new Guid("f4569193-4ff0-4a38-bb7b-217bdb376fee"),
                            Beskrivelse = "D",
                            Kode = "D"
                        },
                        new
                        {
                            Id = new Guid("192c59db-a338-4e28-9801-06dd62443cd5"),
                            Beskrivelse = "E",
                            Kode = "E"
                        },
                        new
                        {
                            Id = new Guid("0c5999af-8f5b-4883-bb3d-e01a5a991f02"),
                            Beskrivelse = "F",
                            Kode = "F"
                        },
                        new
                        {
                            Id = new Guid("d192c26b-0262-4dda-941f-2d54dd44b1ad"),
                            Beskrivelse = "G",
                            Kode = "G"
                        },
                        new
                        {
                            Id = new Guid("801fd9a0-df9e-46c2-95f6-69b075381cb9"),
                            Beskrivelse = "H",
                            Kode = "H"
                        },
                        new
                        {
                            Id = new Guid("acae9bca-e174-4f09-a42b-e313ee88c051"),
                            Beskrivelse = "I",
                            Kode = "I"
                        },
                        new
                        {
                            Id = new Guid("a2dcd346-1d93-44cb-a704-6cbd7872ca51"),
                            Beskrivelse = "J",
                            Kode = "J"
                        },
                        new
                        {
                            Id = new Guid("8b450fd0-2815-461d-8af3-18f321592323"),
                            Beskrivelse = "K",
                            Kode = "K"
                        },
                        new
                        {
                            Id = new Guid("aa11baaa-14ad-4efe-8836-3fb9b1ce9238"),
                            Beskrivelse = "L",
                            Kode = "L"
                        },
                        new
                        {
                            Id = new Guid("d2a4de0a-c220-4624-80a0-45875fd1329e"),
                            Beskrivelse = "M",
                            Kode = "M"
                        },
                        new
                        {
                            Id = new Guid("6be2303f-5f60-47b4-a7ec-71b91e755ab8"),
                            Beskrivelse = "N",
                            Kode = "N"
                        },
                        new
                        {
                            Id = new Guid("4e578132-63ff-43aa-bf68-31f4b565dea2"),
                            Beskrivelse = "O",
                            Kode = "O"
                        },
                        new
                        {
                            Id = new Guid("a75de8c9-aba5-42f0-bfc6-d59ae8630fd5"),
                            Beskrivelse = "Ikke angitt",
                            Kode = "0"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Typekategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typekategori");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1c4c007-137c-4130-b466-c3ffc007d7de"),
                            Beskrivelse = "livsmedium",
                            Kode = "LI"
                        },
                        new
                        {
                            Id = new Guid("1bd2bf18-f8ef-440d-a258-502b8758dfa6"),
                            Beskrivelse = "landformvariasjon",
                            Kode = "LV"
                        },
                        new
                        {
                            Id = new Guid("492aed69-3515-4da0-9361-11d404cb2ef7"),
                            Beskrivelse = "marine vannmasser",
                            Kode = "MV"
                        },
                        new
                        {
                            Id = new Guid("2ccb0411-602e-4c67-86d9-d02d4f04ead6"),
                            Beskrivelse = "primært økodiversitetsnivå",
                            Kode = "PE"
                        },
                        new
                        {
                            Id = new Guid("db7f7db8-0580-4483-aadf-4dbabf28f3b8"),
                            Beskrivelse = "sekundært økodiversitetsnivå",
                            Kode = "SE"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typekategori2");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfd6c72d-b3b4-43f0-87d8-aa73aca830cb"),
                            Beskrivelse = "bremassiv",
                            Kode = "BM"
                        },
                        new
                        {
                            Id = new Guid("d63a2cf8-d283-441b-9b4a-adcf99a5ee5a"),
                            Beskrivelse = "elveløp",
                            Kode = "EL"
                        },
                        new
                        {
                            Id = new Guid("73c1cf3c-7434-4916-9ef7-8d30cb6664a8"),
                            Beskrivelse = "landformer i fast fjell og løsmasser",
                            Kode = "FL"
                        },
                        new
                        {
                            Id = new Guid("5df8ef12-64fa-4139-b938-4a2717fb8bd7"),
                            Beskrivelse = "innsjøbasseng",
                            Kode = "IB"
                        },
                        new
                        {
                            Id = new Guid("6aae4bfb-14b4-45ef-bca8-d9a0f12f9940"),
                            Beskrivelse = "landskapstype",
                            Kode = "LA"
                        },
                        new
                        {
                            Id = new Guid("ec15e224-e848-4364-a80c-1ffdd5c876ec"),
                            Beskrivelse = "natursystem",
                            Kode = "NA"
                        },
                        new
                        {
                            Id = new Guid("b15b33b7-cc10-4939-bf88-affd6aef8342"),
                            Beskrivelse = "naturkompleks",
                            Kode = "NK"
                        },
                        new
                        {
                            Id = new Guid("80669b12-ce4d-4af3-b64f-0f9c0a4930ea"),
                            Beskrivelse = "torvmarksmassiv",
                            Kode = "TM"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Typekategori3", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typekategori3");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7e1088b-3dd6-4f35-b3e3-36484c7321b1"),
                            Beskrivelse = "vannmassesystemer",
                            Kode = "VM"
                        },
                        new
                        {
                            Id = new Guid("85a33672-b9e0-4987-9343-26c67587fd5a"),
                            Beskrivelse = "mark- og bunnsystemer",
                            Kode = "MB"
                        });
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EcosystnivaaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Typekategori2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EcosystnivaaId");

                    b.HasIndex("Typekategori2Id");

                    b.HasIndex("TypekategoriId");

                    b.HasIndex("VersionId");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Undertype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrunntypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrunntypeId");

                    b.HasIndex("VersionId");

                    b.ToTable("Undertype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Grunntype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Hovedtype", "Hovedtype")
                        .WithMany()
                        .HasForeignKey("HovedtypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", "Prosedyrekategori")
                        .WithMany()
                        .HasForeignKey("ProsedyrekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hovedtype");

                    b.Navigation("Prosedyrekategori");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Hovedtypegruppe", "Hovedtypegruppe")
                        .WithMany()
                        .HasForeignKey("HovedtypegruppeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", "Prosedyrekategori")
                        .WithMany()
                        .HasForeignKey("ProsedyrekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hovedtypegruppe");

                    b.Navigation("Prosedyrekategori");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtypegruppe", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", "Typekategori2")
                        .WithMany()
                        .HasForeignKey("Typekategori2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Typekategori2");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Type", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Ecosystnivaa", "Ecosystnivaa")
                        .WithMany()
                        .HasForeignKey("EcosystnivaaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", "Typekategori2")
                        .WithMany()
                        .HasForeignKey("Typekategori2Id");

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori", "Typekategori")
                        .WithMany()
                        .HasForeignKey("TypekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ecosystnivaa");

                    b.Navigation("Typekategori");

                    b.Navigation("Typekategori2");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Undertype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Grunntype", "Grunntype")
                        .WithMany()
                        .HasForeignKey("GrunntypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grunntype");

                    b.Navigation("Version");
                });
#pragma warning restore 612, 618
        }
    }
}
