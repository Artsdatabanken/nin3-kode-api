// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NiN3KodeAPI.DbContexts;

#nullable disable

namespace NiN3KodeAPI.Migrations
{
    [DbContext(typeof(NiN3DbContext))]
    [Migration("20230519092912_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NiN3KodeAPI.Entities.BaseIdEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VersionId");

                    b.ToTable("BaseIdEntity");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Domene", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Domene");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Ecosystnivaa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ecosystnivaa");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Maalestokk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maalestokk");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prosedyrekategori");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Typekategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typekategori");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Typekategori2");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Variabelgruppe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Variabelgruppe");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Variabelkategori2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Variabelkategori2");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Lookupdata.Variabeltype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beskrivelse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Variabeltype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Grunntype", b =>
                {
                    b.HasBaseType("NiN3KodeAPI.Entities.BaseIdEntity");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HovedtypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProsedyrekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("HovedtypeId");

                    b.HasIndex("ProsedyrekategoriId");

                    b.ToTable("Grunntype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtype", b =>
                {
                    b.HasBaseType("NiN3KodeAPI.Entities.BaseIdEntity");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HovedtypegruppeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProsedyrekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("HovedtypegruppeId");

                    b.HasIndex("ProsedyrekategoriId");

                    b.ToTable("Hovedtype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtypegruppe", b =>
                {
                    b.HasBaseType("NiN3KodeAPI.Entities.BaseIdEntity");

                    b.Property<string>("Delkode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Typekategori2Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("Typekategori2Id");

                    b.ToTable("Hovedtypegruppe");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Type", b =>
                {
                    b.HasBaseType("NiN3KodeAPI.Entities.BaseIdEntity");

                    b.Property<Guid>("EcosystnivaaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Typekategori2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypekategoriId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EcosystnivaaId");

                    b.HasIndex("Typekategori2Id");

                    b.HasIndex("TypekategoriId");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Undertype", b =>
                {
                    b.HasBaseType("NiN3KodeAPI.Entities.BaseIdEntity");

                    b.Property<Guid>("GrunntypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("GrunntypeId");

                    b.ToTable("Undertype");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.BaseIdEntity", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Domene", "Version")
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Grunntype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Hovedtype", "Hovedtype")
                        .WithMany()
                        .HasForeignKey("HovedtypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.BaseIdEntity", null)
                        .WithOne()
                        .HasForeignKey("NiN3KodeAPI.Entities.Grunntype", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", "Prosedyrekategori")
                        .WithMany()
                        .HasForeignKey("ProsedyrekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hovedtype");

                    b.Navigation("Prosedyrekategori");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Hovedtypegruppe", "Hovedtypegruppe")
                        .WithMany()
                        .HasForeignKey("HovedtypegruppeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.BaseIdEntity", null)
                        .WithOne()
                        .HasForeignKey("NiN3KodeAPI.Entities.Hovedtype", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Prosedyrekategori", "Prosedyrekategori")
                        .WithMany()
                        .HasForeignKey("ProsedyrekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hovedtypegruppe");

                    b.Navigation("Prosedyrekategori");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Hovedtypegruppe", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.BaseIdEntity", null)
                        .WithOne()
                        .HasForeignKey("NiN3KodeAPI.Entities.Hovedtypegruppe", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", "Typekategori2")
                        .WithMany()
                        .HasForeignKey("Typekategori2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Typekategori2");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Type", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Ecosystnivaa", "Ecosystnivaa")
                        .WithMany()
                        .HasForeignKey("EcosystnivaaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.BaseIdEntity", null)
                        .WithOne()
                        .HasForeignKey("NiN3KodeAPI.Entities.Type", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori2", "Typekategori2")
                        .WithMany()
                        .HasForeignKey("Typekategori2Id");

                    b.HasOne("NiN3KodeAPI.Entities.Lookupdata.Typekategori", "Typekategori")
                        .WithMany()
                        .HasForeignKey("TypekategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ecosystnivaa");

                    b.Navigation("Typekategori");

                    b.Navigation("Typekategori2");
                });

            modelBuilder.Entity("NiN3KodeAPI.Entities.Undertype", b =>
                {
                    b.HasOne("NiN3KodeAPI.Entities.Grunntype", "Grunntype")
                        .WithMany()
                        .HasForeignKey("GrunntypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NiN3KodeAPI.Entities.BaseIdEntity", null)
                        .WithOne()
                        .HasForeignKey("NiN3KodeAPI.Entities.Undertype", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Grunntype");
                });
#pragma warning restore 612, 618
        }
    }
}
